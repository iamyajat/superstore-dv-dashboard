)
fig <- fig %>% colorbar(title = "Average Profit in $")
fig <- fig %>% layout(
title = 'Profits',
geo = g
)
fig
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
)
fig <- plot_geo(dff, locationmode = 'USA-states')
# fig <- fig %>% add_trace(
#   z = ~Profit, text = ~Profit, locations = ~code,
#   color = ~Profit
# )
fig <- fig %>% add_trace(
type = 'choropleth',
locations = ~code,
z = ~Profit,
text = ~Profit,
colorscale = 'Blues',
colorbar = list(title = 'Profit'),
marker = l,
projection = g
)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
)
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa')
)
fig <- plot_geo(dff, locationmode = 'USA-states')
# fig <- fig %>% add_trace(
#   z = ~Profit, text = ~Profit, locations = ~code,
#   color = ~Profit
# )
fig <- fig %>% add_trace(
type = 'choropleth',
locations = ~code,
z = ~Profit,
text = ~Profit,
colorscale = 'Blues',
colorbar = list(title = 'Profit'),
marker = l,
projection = g
)
fig <- fig %>% colorbar(title = "Average Profit in $")
fig <- fig %>% layout(
title = 'Profits',
geo = g
)
fig
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
)
fig <- plot_geo(dff, locationmode = 'USA-states')
fig <- fig %>% add_trace(
z = ~Profit, text = ~Profit, locations = ~code,
color = ~Profit, colors = "Reds"
)
fig <- fig %>% colorbar(title = "Average Profit in $")
fig <- fig %>% layout(
title = 'Profits',
geo = g
)
fig
df = read.csv("./superstore.csv")
head(df)
summary(df)
library(plotly)
library(dplyr)
df_tech = df %>% filter(Category == "Technology")
df_tech = aggregate(df_tech[, 18:21], list(df_tech$State), mean)
state_codes = read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")[,1:2]
df_tech$Group.1
dff = merge(x=df_tech, y=state_codes, by.x= "Group.1", by.y = "state")
dff
fig = plot_ly(df_tech, type='choropleth', locations=df_tech$Group.1, z=df_tech$Profit, text=df_tech$Group.1, colorscale="Blues")
fig
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
)
fig <- plot_geo(dff, locationmode = 'USA-states')
fig <- fig %>% add_trace(
z = ~Profit, text = ~Profit, locations = ~code,
color = ~Profit, colorscale="Viridis",
)
fig <- fig %>% colorbar(title = "Average Profit in $")
fig <- fig %>% layout(
title = 'Profits',
geo = g
)
fig
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
)
fig <- plot_geo(dff, locationmode = 'USA-states')
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa')
)
fig <- plot_geo(dff, locationmode = 'USA-states')
fig <- fig %>% add_trace(
z = ~Profit, text = ~Profit, locations = ~code,
color = ~Profit, colorscale="Viridis",
)
fig <- fig %>% colorbar(title = "Average Profit in $")
fig <- fig %>% layout(
title = 'Profits',
geo = g
)
fig
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa')
)
fig <- plot_geo(dff, locationmode = 'USA-states')
fig <- fig %>% add_trace(
z = ~Profit, text = ~Profit, locations = ~code,
colorscale="Viridis",
)
fig <- fig %>% colorbar(title = "Average Profit in $")
fig <- fig %>% layout(
title = 'Profits',
geo = g
)
fig
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa')
)
fig <- plot_geo(dff, locationmode = 'USA-states')
fig <- fig %>% add_trace(
z = ~Profit, text = ~Profit, locations = ~code,
colorscale="Viridis",
)
fig <- fig %>% add_trace(
z = ~Profit, text = ~Profit, locations = ~code,
color = ~Profit, colors = "Reds"
)
fig <- fig %>% colorbar(title = "Average Profit in $")
fig <- fig %>% layout(
title = 'Profits',
geo = g
)
fig
dff$hover <- with(dff, paste(Group.1, '<br>', "Profits: ", Profit))
fig <- plot_geo(dff, locationmode = 'USA-states')
fig <- fig %>% add_trace(
z = ~Profit, text = ~hover, locations = ~code,
color = ~Profit, colors = "Reds"
)
fig <- fig %>% colorbar(title = "Average Profit in $")
fig <- fig %>% layout(
title = 'Profits',
geo = g
)
fig
fig = plot_ly(dfff, type='choropleth', locations=dff$code, z=dff$Profit, text=dff$hover, colorscale="Blues")
fig
fig = plot_ly(dff, type='choropleth', locations=dff$code, z=dff$Profit, text=dff$hover, colorscale="Blues")
fig
fig = plot_ly(dff, locationmode = 'USA-states', type='choropleth', locations=dff$code, z=dff$Profit, text=dff$hover, colorscale="Blues")
fig
fig <- plot_ly()
fig <- fig %>% add_trace(
z = ~Profit, text = ~hover, locations = ~code,
color = ~Profit, colorscale = "Viridis"
)
fig <- fig %>% colorbar(title = "Average Profit in $")
fig <- plot_ly()
fig <- fig %>% add_trace(
z = dff$Profit, text = dff$hover, locations = dff$code,
color = dff$Profit, colorscale = "Viridis"
)
fig <- fig %>% colorbar(title = "Average Profit in $")
fig <- fig %>% layout(
title = 'Profits',
geo = g
)
fig
dff$hover <- with(dff, paste(Group.1, '<br>', "Profits: ", Profit))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
)
fig <- plot_ly()
fig <- fig %>% add_trace(
type="choropleth",
z = dff$Profit, text = dff$hover, locations = dff$code,
color = dff$Profit, colorscale = "Viridis"
)
fig <- fig %>% colorbar(title = "Average Profit in $")
fig <- fig %>% layout(
title = 'Profits',
geo = g
)
fig
fig <- plot_ly()
fig <- fig %>% add_trace(
type="choropleth",marker=list(line=list(
width=0)
)
z = dff$Profit, text = dff$hover, locations = dff$code,
color = dff$Profit, colorscale = "Viridis"
)
fig <- fig %>% add_trace(
type="choropleth",marker=list(line=list(width=0)),
z = dff$Profit, text = dff$hover, locations = dff$code,
color = dff$Profit, colorscale = "Viridis"
)
fig <- plot_ly()
fig <- fig %>% add_trace(
type="choropleth",marker=list(line=list(width=0)),
z = dff$Profit, text = dff$hover, locations = dff$code,
color = dff$Profit, colorscale = "Viridis"
)
fig <- fig %>% colorbar(title = "Average Profit in $")
fig <- fig %>% layout(
title = 'Profits',
geo = g
)
fig
fig <- plot_ly()
fig <- fig %>% add_trace(
type="choropleth",marker=list(line=list(width=0)),
z = dff$Profit, text = dff$hover, locations = dff$code, colorscale = "Viridis"
)
fig <- fig %>% colorbar(title = "Average Profit in $")
fig <- fig %>% layout(
title = 'Profits',
geo = g
)
fig
url <- 'https://raw.githubusercontent.com/plotly/datasets/master/geojson-counties-fips.json'
counties <- rjson::fromJSON(file=url)
install.packages("rjson")
library("rjson")
url <- 'https://raw.githubusercontent.com/plotly/datasets/master/geojson-counties-fips.json'
counties <- rjson::fromJSON(file=url)
counties
View(counties)
df = read.csv("./superstore.csv")
head(df)
summary(df)
library(plotly)
library(dplyr)
df_tech = df %>% filter(Category == "Technology")
df_tech = aggregate(df_tech[, 18:21], list(df_tech$State), mean)
state_codes = read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")[,1:2]
df_tech$Group.1
dff = merge(x=df_tech, y=state_codes, by.x= "Group.1", by.y = "state")
dff
fig = plot_ly(dff, locationmode = 'USA-states', type='choropleth', locations=dff$code, z=dff$Profit, text=dff$hover, colorscale="Blues")
fig
dff$hover <- with(dff, paste(Group.1, '<br>', "Profits: ", Profit))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
)
fig <- plot_ly()
fig <- fig %>% add_trace(
type="choropleth",marker=list(line=list(width=0)),
z = dff$Profit, text = dff$hover, locations = dff$code, colorscale = "Viridis"
)
fig <- fig %>% colorbar(title = "Average Profit in $")
fig <- fig %>% layout(
title = 'Profits',
geo = g
)
fig
dff$hover <- with(dff, paste(Group.1, '<br>', "Profits: ", Profit))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
)
fig <- plot_ly()
fig <- fig %>% add_trace(
type="choropleth",marker=list(line=list(width=0)),
z = dff$Profit, text = dff$hover, locations = dff$code, colorscale = "Viridis"
)
fig <- fig %>% colorbar(title = "Average Profit in $")
fig <- fig %>% layout(
title = 'Profits',
geo = g
)
fig
df = read.csv("./superstore.csv")
head(df)
summary(df)
library(plotly)
library(dplyr)
df_tech = df %>% filter(Category == "Technology")
df_tech = aggregate(df_tech[, 18:21], list(df_tech$State), mean)
state_codes = read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")[,1:2]
df_tech$Group.1
dff = merge(x=df_tech, y=state_codes, by.x= "Group.1", by.y = "state")
dff
fig = plot_ly(dff, locationmode = 'USA-states', type='choropleth', locations=dff$code, z=dff$Profit, text=dff$hover, colorscale="Blues")
fig
dff$hover <- with(dff, paste(Group.1, '<br>', "Profits: ", Profit))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
)
fig <- plot_ly()
fig <- fig %>% add_trace(
type="choropleth",marker=list(line=list(width=0)),
z = dff$Profit, text = dff$hover, locations = dff$code, colorscale = "Viridis"
)
fig <- fig %>% colorbar(title = "Average Profit in $")
fig <- fig %>% layout(
title = 'Profits',
geo = g
)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa')
)
fig <- plot_ly()
fig <- fig %>% add_trace(
type="choropleth",marker=list(line=list(width=0)),
z = dff$Profit, text = dff$hover, locations = dff$code, colorscale = "Viridis"
)
fig <- fig %>% colorbar(title = "Average Profit in $")
fig <- fig %>% layout(
title = 'Profits',
geo = g
)
fig
fig <- plot_ly(type="choropleth", locations=dff$code, locationmode="USA-states",
z=dff$Profit) %>% layout(geo=list(scope="usa"))
fig
df_tech = df %>% filter(Category == "Technology")
df_tech = aggregate(df_tech[, 18:21], list(df_tech$State), sum)
state_codes = read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")[,1:2]
df_tech$Group.1
dff = merge(x=df_tech, y=state_codes, by.x= "Group.1", by.y = "state")
dff
fig = plot_ly(dff, locationmode = 'USA-states', type='choropleth', locations=dff$code, z=dff$Profit, text=dff$hover, colorscale="Blues")
fig
dff$hover <- with(dff, paste(Group.1, '<br>', "Profits: ", Profit))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa')
)
fig <- plot_ly(type="choropleth", locations=dff$code, locationmode="USA-states",
z=dff$Profit) %>% layout(geo=list(scope="usa"))
fig
fig <- plot_ly(type="choropleth", locations=dff$code,
locationmode="USA-states", colorscale = "termal"
z=dff$Profit) %>% layout(geo=list(scope="usa"))
fig <- plot_ly(type="choropleth", locations=dff$code,
locationmode="USA-states", colorscale = "thermal"
z=dff$Profit) %>% layout(geo=list(scope="usa"))
fig <- plot_ly(type="choropleth", locations=dff$code,
locationmode="USA-states", colorscale = "Blues"
z=dff$Profit) %>% layout(geo=list(scope="usa"))
fig
fig <- plot_ly(type="choropleth", locations=dff$code,
locationmode="USA-states", colors= "Blues"
z=dff$Profit) %>% layout(geo=list(scope="usa"))
fig <- plot_ly(type="choropleth", locations=dff$code,
locationmode="USA-states", color= "Blues"
z=dff$Profit) %>% layout(geo=list(scope="usa"))
fig <- plot_ly(type="choropleth", locations=dff$code,
locationmode="USA-states", colorscale = "thermal",
z=dff$Profit) %>% layout(geo=list(scope="usa"))
fig
fig <- plot_ly(type="choropleth", locations=dff$code,
locationmode="USA-states", colorscale = "RdGn",
z=dff$Profit) %>% layout(geo=list(scope="usa"))
fig
fig <- plot_ly(type="choropleth", locations=dff$code,
locationmode="USA-states", colorscale = "RdYlGn",
z=dff$Profit) %>% layout(geo=list(scope="usa"))
fig
fig <- plot_ly(type="choropleth", locations=dff$code,
locationmode="USA-states", colorscale = "Spectral",
z=dff$Profit) %>% layout(geo=list(scope="usa"))
fig
fig <- plot_ly(type="choropleth", locations=dff$code,
locationmode="USA-states", colorscale = "",
z=dff$Profit) %>% layout(geo=list(scope="usa"))
fig
fig <- plot_ly(type="choropleth", locations=dff$code,
locationmode="USA-states",
z=dff$Profit) %>% layout(geo=list(scope="usa"))
fig <- fig %>% add_trace(colorscale = "RdYlGn")
fig
fig <- plot_ly(type="choropleth", locations=dff$code,
locationmode="USA-states",
z=dff$Profit) %>% layout(geo=g)
fig
df_tech = df %>% filter(Category == "Technology")
df_tech = aggregate(df_tech[, 18:21], list(df_tech$State), mean)
state_codes = read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")[,1:2]
df_tech$Group.1
dff = merge(x=df_tech, y=state_codes, by.x= "Group.1", by.y = "state")
dff
dff$hover <- with(dff, paste(Group.1, '<br>', "Profits: ", Profit))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa')
)
fig <- plot_ly(type="choropleth", locations=dff$code,
locationmode="USA-states",
z=dff$Profit) %>% layout(geo=g)
fig
fig <- fig %>% colorbar(title = "Millions USD")
fig <- fig %>% layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)'
)
fig
fig <- plot_ly(type="choropleth", locations=dff$code,
locationmode="USA-states", text = dff$hover,
z=dff$Profit) %>% layout(geo=g)
fig <- fig %>% colorbar(title = "Millions USD")
fig <- fig %>% layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)'
)
fig
install.packages("shiny")
unique(df$Category)
dff = merge(x=df_tech, y=state_codes, by.x= "Group.1", by.y = "state")
dff
dff$hover <- with(dff, paste(Group.1, '<br>', "Profits: ", Profit))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa')
)
fig <- plot_ly(type="choropleth", locations=dff$code,
locationmode="USA-states", text = dff$hover,
z=dff$Profit) %>% layout(geo=g)
fig <- fig %>% colorbar(title = "Profits USD")
fig <- fig %>% layout(
title = 'Average Profits'
)
fig
df_tech = df %>% filter(Category == "Furniture")
df_tech = aggregate(df_tech[, 18:21], list(df_tech$State), mean)
state_codes = read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")[,1:2]
df_tech$Group.1
dff = merge(x=df_tech, y=state_codes, by.x= "Group.1", by.y = "state")
dff
dff$hover <- with(dff, paste(Group.1, '<br>', "Profits: ", Profit))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa')
)
fig <- plot_ly(type="choropleth", locations=dff$code,
locationmode="USA-states", text = dff$hover,
z=dff$Profit) %>% layout(geo=g)
fig <- fig %>% colorbar(title = "Profits USD")
fig <- fig %>% layout(
title = 'Average Profits'
)
fig
